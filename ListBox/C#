
using Dukiii;
using Mysqlx.Datatypes;
using System.Collections.Generic;
using System.Data;
using System.Windows;
using System.Windows.Controls;
using QuestPDF.Fluent;
using QuestPDF.Infrastructure;

namespace WpfApp1
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
            MariaDBConnection conexion = new MariaDBConnection("192.168.2.53", "hgugiato", "hgugiato", "57233256", 3306);
            DataTable Tabla = conexion.GetDataTable("select * from Cliente");
            CargarListViewCliente(Tabla);

        }
        public void CargarListViewCliente(DataTable Tabla)
        {
            lstCliente.DisplayMemberPath = "Nombre";
            lstCliente.SelectedValuePath = "CI";
            lstCliente.ItemsSource = Tabla.DefaultView;
        }
        public void CargarListViewPedido(DataTable Tabla)
        {
            lstPedidos.DisplayMemberPath = "Fecha";
            lstPedidos.SelectedValuePath = "Nro";
            lstPedidos.ItemsSource = Tabla.DefaultView;
        }
        private void lstCliente_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            MariaDBConnection conexion = new MariaDBConnection("192.168.2.53", "hgugiato", "hgugiato", "57233256", 3306);
            DataTable Tabla = conexion.GetDataTable("select * from Pedido where CI=" + lstCliente.SelectedValue);
            CargarListViewPedido(Tabla);
            Tabla = conexion.GetDataTable("select Concat(Nro, ' | ', Fecha, ' | ', Monto, ' | ', FormaPago, ' | ', CI) as Datos, Nro from Pedido where CI=" + lstCliente.SelectedValue);
            CargarListViewPedidoEntero(Tabla);

        }
        public void CargarListViewPedidoEntero(DataTable Tabla)
        {
            lstPedidosEntero.DisplayMemberPath = "Datos";
            lstPedidosEntero.SelectedValuePath = "Nro";
            lstPedidosEntero.ItemsSource = Tabla.DefaultView;
        }

        private void btnEliminarPedido_Click(object sender, RoutedEventArgs e)
        {
            if (lstPedidosEntero.SelectedIndex != -1)
            {
                try
                {
                    MariaDBConnection conexion = new MariaDBConnection("192.168.2.53", "hgugiato", "hgugiato", "57233256", 3306);
                    conexion.EliminarPedido(lstPedidosEntero.SelectedValue.ToString());
                    DataTable Tabla = conexion.GetDataTable("select Concat(Nro, ' | ', Fecha, ' | ', Monto, ' | ', FormaPago, ' | ', CI) as Datos, Nro from Pedido where CI=" + lstCliente.SelectedValue);
                    CargarListViewPedidoEntero(Tabla);
                    MessageBox.Show("Pedido eliminado exitosamente");
                }
                catch (System.Exception ex)
                {
                    MessageBox.Show("Error desde la base de datos: " + ex);
                }
            }
            else
            {
                MessageBox.Show("Debe seleccionar una entrada en la lista de pedidos para eliminarla");
            }
        }
        private void btnModificarCliente_Click(object sender, RoutedEventArgs e)
        {
            if (lstCliente.SelectedIndex != -1)
            {
                ModCliente modCliente = new ModCliente(lstCliente.SelectedValue.ToString());
                modCliente.Show();
                this.Close();
            }
            else
            {
                MessageBox.Show("Debe seleccionar una entrada en la lista de clientes para modificarla");
            }
        }

        private void Button_ClickGenerarFactura(object sender, RoutedEventArgs e)
        {
            if(lstCliente.SelectedIndex != -1)
            {
                MariaDBConnection mariaDBConnection = new MariaDBConnection("192.168.2.53", "hgugiato", "hgugiato", "57233256", 3306);
                // Crear una instancia de Invoice y llenar con datos de ejemplo
                var invoice = new Invoice
                {
                    ClientName = mariaDBConnection.TraerCIPedido(lstPedidosEntero.SelectedValue.ToString()),
                    Fecha = mariaDBConnection.TraerFechaPedido(lstPedidosEntero.SelectedValue.ToString()),
                    FormPago = mariaDBConnection.TraerFormaPagoPedido(lstPedidosEntero.SelectedValue.ToString()),
                    Monto = mariaDBConnection.TraerMontoPedido(lstPedidosEntero.SelectedValue.ToString())
                };

                // Crear el documento PDF
                var document = Document.Create(container =>
                {
                    container.Page(page =>
                    {
                        page.Content()
                            .Column(column =>
                            {
                                // Título de la factura
                                column.Item().Text($"Factura para: {invoice.ClientName}").FontSize(20).Bold();

                                // Sección de detalles de la compra
                                column.Item().Text("Detalles de la compra:");
                                column.Item().Text("Fecha de la compra:" + invoice.Fecha);
                                column.Item().Text("Forma de pago utilizada:" + invoice.FormPago);
                                column.Item().Text("Monto abonado:" + invoice.Monto);

                                // Mostrar el total de la factura
                            });
                    });
                });
                QuestPDF.Settings.License = LicenseType.Community;
                // Generar el PDF y guardarlo con el nombre "Factura.pdf"
                document.GeneratePdf("PDFLOL.pdf");
                document.GeneratePdfAndShow();
                MessageBox.Show("Factura generada con exito");
            } else
            {
                MessageBox.Show("Debe seleccionar un cliente para crear su factura");
            }
        }
    }
}

