using MySql.Data.MySqlClient;
using System;
using System.Data;

public class MariaDBConnection
{
    private MySqlConnection connection;
    private string server;
    private string database;
    private string uid;
    private string password;
    private int port;

    // Constructor
    public MariaDBConnection(string server, string database, string uid, string password, int port)
    {
        this.server = server;
        this.database = database;
        this.uid = uid;
        this.password = password;
        this.port = port;

        Initialize();
    }

    // Inicializa la conexión
    private void Initialize()
    {
        string connectionString;
        connectionString = $"SERVER ={server}; PORT ={port}; DATABASE ={database}; UID ={uid}; PASSWORD ={password}; ";

        connection = new MySqlConnection(connectionString);
    }

    // Abre la conexión a la base de datos
    public bool OpenConnection()
    {
        try
        {
            connection.Open();
            return true;
        }
        catch (MySqlException ex)
        {
            // Gestión de errores de conexión
            switch (ex.Number)
            {
                case 0:
                    Console.WriteLine("No se puede conectar al servidor de la base de datos.");
                    break;
                case 1045:
                    Console.WriteLine("Credenciales inválidas.");
                    break;
                default:
                    Console.WriteLine("Error de conexión: { ex.Message}");
                    break;
            }
            return false;
        }
    }

    // Cierra la conexión a la base de datos
    public bool CloseConnection()
    {
        try
        {
            connection.Close();
            return true;
        }
        catch (MySqlException ex)
        {
            Console.WriteLine("Error al cerrar la conexión: { ex.Message}");
            return false;
        }
    }

    // Ejecuta una consulta SQL
    public MySqlDataReader ExecuteQuery(string query)
    {
        MySqlCommand cmd = new MySqlCommand(query, connection);
        MySqlDataReader dataReader = cmd.ExecuteReader();
        return dataReader;
    }

    // Ejecuta una consulta SQL que no devuelve datos (INSERT, UPDATE, DELETE)
    public int ExecuteNonQuery(string query)
    {
        MySqlCommand cmd = new MySqlCommand(query, connection);
        int result = cmd.ExecuteNonQuery();
        return result;
    }

    // Ejecuta una consulta SQL y devuelve el resultado como un objeto escalar
    public object ExecuteScalar(string query)
    {
        MySqlCommand cmd = new MySqlCommand(query, connection);
        object result = cmd.ExecuteScalar();
        return result;
    }
    // Ejecuta una consulta SQL y devuelve un DataTable
    public DataTable GetDataTable(string query)
    {
        DataTable dataTable = new DataTable();
        if (OpenConnection())
        {
            try
            {
                using (MySqlCommand cmd = new MySqlCommand(query, connection))
                {
                    using (MySqlDataAdapter adapter = new MySqlDataAdapter(cmd))
                    {
                        adapter.Fill(dataTable);
                    }
                }
                CloseConnection();
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error al obtener DataTable: {ex.Message}");
            }
        }
        else
        {
            throw new InvalidOperationException("No se pudo abrir la conexión a la base de datos.");
        }

        return dataTable;
    }
    public void EliminarPedido(string Nro)
    {
        OpenConnection();
        ExecuteNonQuery("Delete from Pedido where Nro=" + Nro + ";");
        CloseConnection();
    }
    public string TraerNombreCliente(string CI)
    {
        string Nombre = string.Empty;
        OpenConnection();
        MySqlDataReader Reader = ExecuteQuery("Select Nombre from Cliente where CI=" + CI + ";");
        if (Reader.Read())
        {
            Nombre= Reader.GetValue(0).ToString();
        }
        CloseConnection();
        return Nombre;
    }
    public void CambiarNombreCliente(string Nombre, string CI)
    {
        OpenConnection();
        ExecuteNonQuery("update Cliente set Nombre='" + Nombre + "' where CI=" + CI + ";");
        CloseConnection();
    }
}
